1.仓库管理第一步-初始化仓库
命令：git init
备注：
1）让一个目录成为仓库，该命令创建后，该目录下会多一个.git目录，该目录是git的核心
.git目录是‘附属于该仓库的工作树’。文件的编辑等操作是在工作树中进行的，然后记录到仓库中，
以此管理文件的历史快照。
如果想将文件恢复到原先的状态，可以从仓库调取之前的快照，在工作树打开。开发者可以通过这种方式获取以往的文件
2）所谓提交（commit）是指记录工作树中所有文件的当前状态

2.查看仓库的工作状态
命令：git status

3.向暂存区（stage或者index）中存入文件
命令：git add
舍弃git add-git rm --cached <file>
舍弃修改之后的git add-git reset HEAD <file>

4.保存仓库的历史记录
命令：git commit
将当前暂存区的文件实际保存到仓库的历史记录中
备注：
1）记录一行提交信息
git commit -m "备注信息"
2）记录多行提交信息（详细提交信息）
git commit
一般有三行：
第一行：用一行文字简述要提交的更改内容
第二行：空行
第三行：记述更改的原因和详细内容

如果提交信息为空，该提交会被终止【不允许提交备注信息为空，git commit -m ""单行如果提交内容为空，也不允许提交】

5.查看日交日志
命令：git log
备注：
1)该命令主要是查看什么人在什么时候进行了提交或者合并，以及操作前后有怎样的区别
2）只显示提交信息的第一行：git log --pretty=short,少了日期和更改的原因
3）只显示指定目录，文件的日志：git log filename/dirName
4）显示文件的变动：git log -p


6.查看更改前后的区别
命令：git diff [filename]
备注：
1）查看工作树和暂存区的区别
git diff
'+'号标出的是新添加的行
'-'号标出的是被删除的行

2)查看工作树和最新提交的差别
git diff HEAD
好习惯：git commit前先git diff HEAD【这里的HEAD是指向当前分支中最后一次提交的指针】

7.显示分支一览表
命令：git branch
备注：
1）git branch -a，查询所有的分支，本地及远程

8.创建，切换分支
命令：git checkout -b
备注：
1）创建分支都有一个基础分支，比如现在我在master分支，创建了分支A，那么分支A此刻和master分支是完全一样的
2）git checkout -b 分支名= git branch 分支名+git checkout 分支名











